
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ALFA
 */
public class UserUI extends javax.swing.JFrame {

    ArrayList<String> cities;
    User user;
    LoginFrame login;

    /**
     * Creates new form UserUI
     */
    public UserUI(User user, LoginFrame login, ArrayList<String> cities) {
        this.user = user;
        this.login = login;
        this.cities = cities;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        planTablePopUp = new javax.swing.JPopupMenu();
        userUIPanel = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userIDField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        streetNumberField = new javax.swing.JTextField();
        streetField = new javax.swing.JTextField();
        suburbField = new javax.swing.JTextField();
        cityComboBox = new javax.swing.JComboBox<>();
        cityField = new javax.swing.JTextField();
        newCityCheckBox = new javax.swing.JCheckBox();
        ChangeButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        findField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        findButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        findTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        planTable = new javax.swing.JTable();
        updatePlanButton = new javax.swing.JButton();
        deletePlanButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        planTable1 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        filterMobileModelField = new javax.swing.JTextField();
        filterByDateButton = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        filterExpiryDateField = new javax.swing.JTextField();
        sortByUsernameCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        personalPlanChoice = new javax.swing.JRadioButton();
        bussinesPlanChoice = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        planIDField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        planUserNameField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        modelField = new javax.swing.JTextField();
        memorySizeField = new javax.swing.JTextField();
        OSComboBox = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        internetQuotaField = new javax.swing.JTextField();
        capLimitField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cityOrNoLable = new javax.swing.JLabel();
        dayField = new javax.swing.JTextField();
        monthField = new javax.swing.JTextField();
        yearField = new javax.swing.JTextField();
        cityOrNoField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        ABNLabel = new javax.swing.JLabel();
        ABNField = new javax.swing.JTextField();
        addPlanButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        logOutMenuItem = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userUIPanel.setAutoscrolls(true);
        userUIPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                userUIPanelStateChanged(evt);
            }
        });

        jLabel1.setText("UserID:");

        userIDField.setEditable(false);
        userIDField.setEnabled(false);
        userIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Nmae");

        jLabel3.setText("Password");

        jLabel4.setText("Address Information");

        jLabel5.setText("Street Number");

        jLabel6.setText("Street");

        jLabel7.setText("Suburb");

        jLabel8.setText("City");

        streetNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNumberFieldActionPerformed(evt);
            }
        });

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cityField.setEditable(false);
        cityField.setEnabled(false);

        newCityCheckBox.setText("New City");
        newCityCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                newCityCheckBoxStateChanged(evt);
            }
        });
        newCityCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCityCheckBoxActionPerformed(evt);
            }
        });

        ChangeButton.setText("Change");
        ChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(streetNumberField)
                            .addComponent(streetField)
                            .addComponent(suburbField)
                            .addComponent(cityComboBox, 0, 86, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newCityCheckBox))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(ChangeButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                        .addComponent(userIDField)))))))
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suburbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCityCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(ChangeButton)
                .addContainerGap())
        );

        userUIPanel.addTab("Edit Personal Data", jPanel2);

        jLabel22.setText("Plan ID");

        findButton.setForeground(new java.awt.Color(255, 51, 51));
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        findTextArea.setColumns(20);
        findTextArea.setRows(5);
        jScrollPane1.setViewportView(findTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findButton)
                .addContainerGap(610, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(findButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        userUIPanel.addTab("Find Plan", jPanel3);

        planTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PlanID", "User Name", "Model", "OS type", "Memory Size", "Handset Price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Number of Employess", "Monthly Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(planTable);

        updatePlanButton.setForeground(new java.awt.Color(0, 255, 0));
        updatePlanButton.setText("Update");
        updatePlanButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePlanButtonMouseClicked(evt);
            }
        });
        updatePlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePlanButtonActionPerformed(evt);
            }
        });

        deletePlanButton.setForeground(new java.awt.Color(255, 0, 0));
        deletePlanButton.setText("Delete");
        deletePlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(updatePlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deletePlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(353, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatePlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletePlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        userUIPanel.addTab("Plans Informations", jPanel4);

        planTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PlanID", "User Name", "Model", "OS type", "Memory Size", "Handset Price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Number of Employess", "Monthly Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(planTable1);

        jLabel23.setText("Mobile Model");

        filterMobileModelField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterMobileModelFieldKeyReleased(evt);
            }
        });

        filterByDateButton.setText("Filter By Date");
        filterByDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByDateButtonActionPerformed(evt);
            }
        });

        jLabel24.setText("Expiry Date");

        sortByUsernameCheckBox.setText("Sort by Username");
        sortByUsernameCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sortByUsernameCheckBoxStateChanged(evt);
            }
        });
        sortByUsernameCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByUsernameCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 892, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterMobileModelField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filterExpiryDateField)))
                .addGap(33, 33, 33)
                .addComponent(filterByDateButton)
                .addGap(180, 180, 180)
                .addComponent(sortByUsernameCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterMobileModelField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterByDateButton)
                    .addComponent(jLabel24)
                    .addComponent(filterExpiryDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortByUsernameCheckBox))
                .addGap(40, 40, 40))
        );

        userUIPanel.addTab("Filter Plan", jPanel5);

        buttonGroup1.add(personalPlanChoice);
        personalPlanChoice.setSelected(true);
        personalPlanChoice.setText("PersonalPlan");
        personalPlanChoice.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                personalPlanChoiceStateChanged(evt);
            }
        });
        personalPlanChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalPlanChoiceActionPerformed(evt);
            }
        });

        buttonGroup1.add(bussinesPlanChoice);
        bussinesPlanChoice.setText("BussinesPlan");
        bussinesPlanChoice.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bussinesPlanChoiceStateChanged(evt);
            }
        });

        jLabel9.setText("Plan ID");

        jLabel10.setText("Username");

        jLabel11.setText("Mobile Phone");

        jLabel12.setText("Model");

        jLabel13.setText("OS Type");

        jLabel14.setText("MemorySize");

        OSComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IOS", "Windows", "Android" }));
        OSComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OSComboBoxActionPerformed(evt);
            }
        });

        jLabel15.setText("Price");

        capLimitField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capLimitFieldActionPerformed(evt);
            }
        });

        jLabel16.setText("Internet Quota");

        jLabel17.setText("Cap Limit");

        jLabel18.setText("Expiry Date");

        jLabel19.setText("Day");

        jLabel20.setText("Month");

        jLabel21.setText("Year");

        cityOrNoLable.setText("City");

        clearButton.setForeground(new java.awt.Color(255, 0, 0));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        ABNLabel.setText("ABN");

        ABNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABNFieldActionPerformed(evt);
            }
        });

        addPlanButton.setForeground(new java.awt.Color(51, 255, 51));
        addPlanButton.setText("AddPlan");
        addPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addPlanButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(dayField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                                .addComponent(monthField, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(planIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                                    .addComponent(planUserNameField)))
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(21, 21, 21)
                                            .addComponent(capLimitField))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel16)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(internetQuotaField))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addGap(52, 52, 52)
                                            .addComponent(priceField))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(modelField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(OSComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addGap(18, 18, 18)
                                            .addComponent(memorySizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(personalPlanChoice)
                                .addGap(18, 18, 18)
                                .addComponent(bussinesPlanChoice))
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(clearButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cityOrNoLable)
                                        .addGap(18, 18, 18)
                                        .addComponent(cityOrNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ABNLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(ABNField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(205, 205, 205))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalPlanChoice)
                    .addComponent(bussinesPlanChoice)
                    .addComponent(addPlanButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(planUserNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(OSComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memorySizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(internetQuotaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ABNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ABNLabel))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityOrNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityOrNoLable))))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        userUIPanel.addTab("AddPlans", jPanel1);

        logOutMenuItem.setText("Log Out");
        logOutMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutMenuItemMouseClicked(evt);
            }
        });
        jMenuBar1.add(logOutMenuItem);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userUIPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(userUIPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIDFieldActionPerformed

    private void userUIPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_userUIPanelStateChanged
        findTextArea.setText("");
        userIDField.setText(user.getUserID() + "");
        nameField.setText(user.getName());
        passwordField.setText(user.getUserPassword());
        streetNumberField.setText(user.getAddress().getStreetNum() + "");
        streetField.setText(user.getAddress().getStreet());
        suburbField.setText(user.getAddress().getSuburb());
        cityComboBox.setModel(new DefaultComboBoxModel(this.cities.toArray(new String[0])));
        cityComboBox.setSelectedItem(user.getAddress().getCity());
        cityField.setText(user.getAddress().getCity());
        personalPlanChoice.setSelected(true);
        if (personalPlanChoice.isSelected()) {
            ABNField.setVisible(false);
            ABNLabel.setVisible(false);
            cityOrNoLable.setText("City");

        } else {
            ABNField.setVisible(true);
            ABNLabel.setVisible(true);
            cityOrNoLable.setText("Employee NO");
        }
        this.planTable.setComponentPopupMenu(this.planTablePopUp);
        fillTable();
        fillTable1();

    }//GEN-LAST:event_userUIPanelStateChanged

    private void streetNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNumberFieldActionPerformed

    private void newCityCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_newCityCheckBoxStateChanged
        if (newCityCheckBox.isSelected()) {
            cityComboBox.setEnabled(false);
            cityField.setEnabled(true);
            cityField.setEditable(true);
        } else {

            this.cityComboBox.setEnabled(true);
            this.cityField.setEnabled(false);
            cityField.setEditable(false);
        }
    }//GEN-LAST:event_newCityCheckBoxStateChanged

    private void ChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeButtonActionPerformed
        try {
            this.user.setName(this.nameField.getText());
            this.user.setUserPassword(this.passwordField.getText());
            this.user.getAddress().setStreetNum(Integer.parseInt(this.streetNumberField.getText()));
            this.user.getAddress().setStreet(this.streetField.getText());
            this.user.getAddress().setSuburb(this.suburbField.getText());
            if (this.newCityCheckBox.isSelected()) {
                this.user.getAddress().setCity(this.cityField.getText());
                this.cities.add(this.cityField.getText());
                this.cityComboBox.setModel(new DefaultComboBoxModel(this.cities.toArray(new String[0])));
                this.cityComboBox.setSelectedItem(this.cityField.getText());

            } else {
                this.user.getAddress().setCity((String) this.cityComboBox.getSelectedItem());
                this.cityField.setText(this.user.getAddress().getCity());
            }
            JOptionPane.showMessageDialog(this, "Changes applied Succsesfully");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_ChangeButtonActionPerformed

    private void newCityCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCityCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCityCheckBoxActionPerformed

    private void logOutMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutMenuItemMouseClicked
        dispose();
        login.setVisible(true);
    }//GEN-LAST:event_logOutMenuItemMouseClicked

    private void ABNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ABNFieldActionPerformed

    private void personalPlanChoiceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_personalPlanChoiceStateChanged
        if (personalPlanChoice.isSelected()) {
            ABNField.setVisible(false);
            ABNLabel.setVisible(false);
            cityOrNoLable.setText("City");

        } else {
            ABNField.setVisible(true);
            ABNLabel.setVisible(true);
            cityOrNoLable.setText("Employee NO");
        }
    }//GEN-LAST:event_personalPlanChoiceStateChanged

    private void personalPlanChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalPlanChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personalPlanChoiceActionPerformed

    private void capLimitFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capLimitFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_capLimitFieldActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        planIDField.setText("");
        planUserNameField.setText("");
        modelField.setText("");
        memorySizeField.setText("");
        priceField.setText("");
        internetQuotaField.setText("");
        capLimitField.setText("");
        dayField.setText("");
        monthField.setText("");
        yearField.setText("");
        cityOrNoField.setText("");
        ABNField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void addPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlanButtonActionPerformed
        try {
            addPlan();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_addPlanButtonActionPerformed

    private void OSComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OSComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OSComboBoxActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        try {
            Plan plan = user.findPlan(Integer.parseInt(findField.getText()));
            if (plan != null) {
                findTextArea.append(plan.toString() + "\n");
            } else {
                findTextArea.append("Plan with ID: " + findField.getText() + " dont exist" + "\n");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }


    }//GEN-LAST:event_findButtonActionPerformed

    private void updatePlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePlanButtonActionPerformed
        try {
            int ind = this.planTable.getSelectedRow();
            if (ind >= 0) {
                int ID = Integer.parseInt((String) planTable.getValueAt(ind, 0));
                updateUI updateUI = new updateUI((Plan) this.user.getPlans().get(ID), this);
                updateUI.setVisible(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_updatePlanButtonActionPerformed

    private void deletePlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlanButtonActionPerformed
        try {
            int ind = this.planTable.getSelectedRow();
            if (ind >= 0) {
                int ID = Integer.parseInt((String) planTable.getValueAt(ind, 0));
                this.user.getPlans().remove(ID);
                fillTable();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_deletePlanButtonActionPerformed

    private void updatePlanButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePlanButtonMouseClicked

    }//GEN-LAST:event_updatePlanButtonMouseClicked

    private void bussinesPlanChoiceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bussinesPlanChoiceStateChanged
        if (personalPlanChoice.isSelected()) {
            ABNField.setVisible(false);
            ABNLabel.setVisible(false);
            cityOrNoLable.setText("City");

        } else {
            ABNField.setVisible(true);
            ABNLabel.setVisible(true);
            cityOrNoLable.setText("Employee NO");
        }
    }//GEN-LAST:event_bussinesPlanChoiceStateChanged

    private void filterMobileModelFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterMobileModelFieldKeyReleased
        fillTable1();
    }//GEN-LAST:event_filterMobileModelFieldKeyReleased

    private void filterByDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterByDateButtonActionPerformed
        fillTable1();
    }//GEN-LAST:event_filterByDateButtonActionPerformed

    private void sortByUsernameCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sortByUsernameCheckBoxStateChanged
        fillTable1();
    }//GEN-LAST:event_sortByUsernameCheckBoxStateChanged

    private void sortByUsernameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByUsernameCheckBoxActionPerformed
        fillTable1();
    }//GEN-LAST:event_sortByUsernameCheckBoxActionPerformed
    public void addPlan() throws PlanUserNameException, PlanException {
        if (personalPlanChoice.isSelected()) {
            boolean status = false;
            try {
                status = user.createPersonalPlan(planUserNameField.getText(), Integer.parseInt(planIDField.getText()), new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), cityOrNoField.getText());
            } catch (PlanException e) {
                JOptionPane.showMessageDialog(this, e);
                try {
                    status = user.createPersonalPlan(planUserNameField.getText(), e.ID, new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), cityOrNoField.getText());
                } catch (PlanUserNameException a) {
                    JOptionPane.showMessageDialog(this, a);
                    status = user.createPersonalPlan(a.userName, e.ID, new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), cityOrNoField.getText());
                }

            }
            if (status = true) {
                JOptionPane.showMessageDialog(this, "Plan Added Succsusfully");
            } else {
                JOptionPane.showMessageDialog(this, " Faild To Add this Plan");
            }

        } else {
            boolean status = false;
            try {
                status = user.createBusinessPlan(planUserNameField.getText(), Integer.parseInt(planIDField.getText()), new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), Integer.parseInt(cityOrNoField.getText()), Integer.parseInt(ABNField.getText()));
            } catch (PlanException e) {
                JOptionPane.showMessageDialog(this, e);
                try {
                    status = user.createBusinessPlan(planUserNameField.getText(), e.ID, new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), Integer.parseInt(cityOrNoField.getText()), Integer.parseInt(ABNField.getText()));
                } catch (PlanUserNameException a) {
                    JOptionPane.showMessageDialog(this, a);
                    status = user.createBusinessPlan(a.userName, e.ID, new MobilePhone(modelField.getText(), MobileType.valueOf(OSComboBox.getSelectedItem().toString()), Integer.parseInt(memorySizeField.getText()), Double.parseDouble(priceField.getText())), Integer.parseInt(internetQuotaField.getText()), Integer.parseInt(capLimitField.getText()), new MyDate(Integer.parseInt(yearField.getText()), Integer.parseInt(monthField.getText()), Integer.parseInt(dayField.getText())), Integer.parseInt(cityOrNoField.getText()), Integer.parseInt(ABNField.getText()));

                }
            }
            if (status = true) {
                JOptionPane.showMessageDialog(this, "Plan Added Succsusfully");
            } else {
                JOptionPane.showMessageDialog(this, " Faild To Add this Plan");
            }
        }
    }

    public void fillTable() {
        String[] header = {"Plan ID", "username", "Model", "OS Type", "Memory Size", "handset price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Number of Employees", "Monthly Payment"};
        DefaultTableModel model = new DefaultTableModel(header, 0);
        this.planTable.setModel(model);
        for (Plan plan : this.user.getPlans().values()) {

            String[] row = new String[13];
            row[0] = plan.getId() + "";
            row[1] = plan.getUserName();
            row[2] = plan.getHandset().getModel();
            row[3] = plan.getHandset().getType().toString();
            row[4] = plan.getHandset().getMemorySize() + "";
            row[5] = plan.getHandset().getPrice() + "";
            row[6] = plan.getInternetQuota() + "";
            row[7] = plan.getCapLimit() + "";
            row[8] = plan.getExpiryDate().toString();
            if (plan instanceof PersonalPlan) {

                row[9] = ((PersonalPlan) plan).getCity();
                row[10] = "NA";
                row[11] = "NA";
            } else {

                row[9] = "NA";
                row[10] = ((BusinessPlan) plan).getABN() + "";
                row[11] = ((BusinessPlan) plan).getNumberOfEmployees() + "";
            }
            row[12] = String.format("$%.2f", plan.calcPayment(5));

            model.addRow(row);
        }

    }

    public void fillTable1() {
        try {
            ArrayList<Plan> plansCopy = user.shallowCopyPlans();
            if (!filterMobileModelField.getText().isEmpty()) {
                plansCopy = Plan.filterByMobileModel(plansCopy, filterMobileModelField.getText());
            }
            if (!filterExpiryDateField.getText().isEmpty()) {
                String[] fields = filterExpiryDateField.getText().split("/");
                int year = Integer.parseInt(fields[0]);
                int month = Integer.parseInt(fields[1]);
                int day = Integer.parseInt(fields[2]);
                MyDate date = new MyDate(year, month, day);
                plansCopy = Plan.filterByExpiryDate(plansCopy, date);
            }
            if (sortByUsernameCheckBox.isSelected()) {
                Collections.sort(plansCopy);
            }
            String[] header = {"Plan ID", "username", "Model", "OS Type", "Memory Size", "handset price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Number of Employees", "Monthly Payment"};
            DefaultTableModel model = new DefaultTableModel(header, 0);
            this.planTable1.setModel(model);
            for (Plan plan : plansCopy) {

                String[] row = new String[13];
                row[0] = plan.getId() + "";
                row[1] = plan.getUserName();
                row[2] = plan.getHandset().getModel();
                row[3] = plan.getHandset().getType().toString();
                row[4] = plan.getHandset().getMemorySize() + "";
                row[5] = plan.getHandset().getPrice() + "";
                row[6] = plan.getInternetQuota() + "";
                row[7] = plan.getCapLimit() + "";
                row[8] = plan.getExpiryDate().toString();
                if (plan instanceof PersonalPlan) {

                    row[9] = ((PersonalPlan) plan).getCity();
                    row[10] = "NA";
                    row[11] = "NA";
                } else {

                    row[9] = "NA";
                    row[10] = ((BusinessPlan) plan).getABN() + "";
                    row[11] = ((BusinessPlan) plan).getNumberOfEmployees() + "";
                }
                row[12] = String.format("$%.2f", plan.calcPayment(5));

                model.addRow(row);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UserUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ABNField;
    private javax.swing.JLabel ABNLabel;
    private javax.swing.JButton ChangeButton;
    private javax.swing.JComboBox<String> OSComboBox;
    private javax.swing.JButton addPlanButton;
    private javax.swing.JRadioButton bussinesPlanChoice;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField capLimitField;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JTextField cityField;
    private javax.swing.JTextField cityOrNoField;
    private javax.swing.JLabel cityOrNoLable;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dayField;
    private javax.swing.JButton deletePlanButton;
    private javax.swing.JButton filterByDateButton;
    private javax.swing.JTextField filterExpiryDateField;
    private javax.swing.JTextField filterMobileModelField;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField findField;
    private javax.swing.JTextArea findTextArea;
    private javax.swing.JTextField internetQuotaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu logOutMenuItem;
    private javax.swing.JTextField memorySizeField;
    private javax.swing.JTextField modelField;
    private javax.swing.JTextField monthField;
    private javax.swing.JTextField nameField;
    private javax.swing.JCheckBox newCityCheckBox;
    private javax.swing.JTextField passwordField;
    private javax.swing.JRadioButton personalPlanChoice;
    private javax.swing.JTextField planIDField;
    private javax.swing.JTable planTable;
    private javax.swing.JTable planTable1;
    private javax.swing.JPopupMenu planTablePopUp;
    private javax.swing.JTextField planUserNameField;
    private javax.swing.JTextField priceField;
    private javax.swing.JCheckBox sortByUsernameCheckBox;
    private javax.swing.JTextField streetField;
    private javax.swing.JTextField streetNumberField;
    private javax.swing.JTextField suburbField;
    private javax.swing.JButton updatePlanButton;
    private javax.swing.JTextField userIDField;
    private javax.swing.JTabbedPane userUIPanel;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
